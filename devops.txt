
                                                                 linux                   

cat /etc/os-release = give details of present guest operating system .

sudo -i = this command is used to become a root user .

cd = used for changing the directory

mkdir= used for making the directory

touch = used to create the file

rm = used to remove the file 

cd .. = used to come out from a directory

ls = used for showing  the list of elements in directory.

ls -a = use for showing the hidden files also.

pwd = path of directory

touch file{1..10}.txt = create the files named as file1.txt , files2.txt , files3.txt ------ files10.txt.

cp file.txt dev/ = copy the file.txt to directory named as dev  (here this command copying the file with the relative path).

cp  /home/vagrant/file.txt  /home/vagrant/dev/ = copy the file.txt to directory named as dev . (here this command is copying files with the absolute path).

cd ~ = used to come back in home directory from root directory.

cp devdir bakupdir/ =you can't copy the one dir to another directory simply by cp command.

cp -r devdir bakupdir/ = this is the command for copying the dev directory to bakupdir.

mv file.txt dev/ = this is command for moving a file from  present directory to destination directory dev.

mv ops dev/ =  this command is used for moving a ops directory to dev directory.

mv f1.txt f2.txt = this command is used for moving one file f1.txt to f2.txt.

mv *.txt devdir/ = this command is used for moving all the files which are ending with .txt extension to devdir directory.

rm file.txt = this command is used for remove the file.txt from the present directory.

rm -r devdir = this command is used for remove the directory devdir.


--------------// vim editor------------

------------- basic process starts :-


vim firstfile.txt = command for creating a file  and open in vim editor or enter in the existing file of this name .

this time it is in command mode .

then press i

after this vim editor is in insert mode.

then write whatever you want 

then press esc

after this vim editor comes again in command mode .

then press :

vim editor comes in extended mode.
 
and to save the file 

press w and then press enter to save the file .

for again the editor to be in command mode and exit  from the present file after saving the changes. 

press esc : q

for again the editor to be in command mode and forcefully exit  from the present file without saving the changes. 

press esc : q!

 ----ends----------- 

----------commands starts:-

cat firstfile.txt = this command is used to read the file . it only print the content of file on terminal.

less firstfile.txt = this is also same as cat  but it acts as a reader little bit similar to vim editor have search option  and q for quit  , etc .

more file.txt = cat jaisa hi hai isme content percentage me batata hai . enter dabane percentage badhta rehta hai .jyaada kaam ka nahi hai.

:se nu = this command is used for setting the line numbers to each line .

while capslock pressed  shift g = the command is used to go to first line .

shift gg = command to go to last line .

if you want to copy a specific line then set the cursor on that line then press yy and then if you want to paste it somewhere then press p to paste. if you want to paste above the line then press capital p otherwise small p for below the line .

if you want to copy the n lines  starting from a specific line then  set cursor to that specific line and press n times y then it will copy all n lines including specific line .

if you want to delete a specific line then set the cursor on that line then press dd to delete that line . 

if you want undo the changes then press u .

press n times d to delete n lines .

yy then p is used to copy paste.

dd then p is used to cut paste .

if there are n lines to delete like more than 500 or any big number then press n and then press dd .

if want to search a word like as network then       press /network          then editor will indicate all the lines with word network.

:%s/wordtoreplace/word from we have to replace/g   used in vim editor to replace word with other word .


visudo commands used to open the sudoers file in vim editor .

if you want to replace the word1 with word2 in the vim editor then you have to type command = %s/word1/word2/g  . here g is for globally it means it change all the 
existence of word1 with word2. 

---------------------------/ command ends and vim editor also.----------------------


general commands :-

file devops.txt = this command shows which type of file is this . whether it is binaryfile or textfile it is .

ls -l = give the extra details of files or directory with list.

mkdir -p /opt/dev/ops/devops/test = creates whole path if they don't exists.

ln -s /opt/dev/ops/devops/test/command.txt  cmds = agar command.txt file apan ko regular acces karni hai aur vo itni andar aisi files k liye apan iss function se ek link bna sakte hai . jaise ki isme cmds naam ka link banaya hai.

unlink cmds = it is used when we have to remove the link named as cmds .

ls -lt = showing files according to time when it is updated .

ls -ltr = reverse of upper command .
---------------------------------------------
command for changing the hostname 

vim /etc/hostname 
hostname centos66.devops.in
hostname 



---------------------------------------------------------------------------------

grep firewall anaconda.cfg = agar firewall word anaconda.cfg mein hoga to batayega.

grep -i firewall anaconda.cfg = agar firewall ,Firewall , fireWall ,etc koi bhi hoga to bta dega .

grep -i firewall * = poori directory ke andar agar yeh word ho toh bta dega . except any child directory in this directory.

grep -iR firewall * = poori directory ke andar agar yeh word ho toh bta dega . child directory mein hoga toh bhi btadega .

grep -vi firewall anaconda-ks.cfg = show all the lines of anaconda-ks.cfg except the lines which contain the firewall . 

less anaconda-ks.cfg = it is like a reader show the file contents as same as cat command but something different from cat command.it looks like a vim editor but it's not vim.

head anaconda-ks.cfg = it gives first 10 lines of the content of files.

head -20 anaconda-ks.cfg = show first 20lines of file.

head -2 anaconda-ks.cfg = show first 2 lines of file. (no. of lines are variable ).

tail anaconda-ks.cfg = it gives last 10 lines of the content of files.

tail -f anaconda-ks.cfg = it is also same as upper one but difference is it shows the contents dynamically mtlb jaise hi uss file mein change hoga to voh ussi samay uss file ke contents ko change kar dega . mtlb contents show ka live process hai to terminal par chalta rehta hai . and  q press karne par quit hota hai .

cut  d: f1 /etc/passwd = d is delimiter here : is delimiter it means when : comes next field starts , f1 means field no.1 it can be 2 , 3, etc. 

awk '{print $2}' file.txt  = jaisze kisi file mein jo content hai vo table ki form mein hai toh to iss command se apan uss table ka jo column dekhna chahe yeh vo column ko terminal par print   kar dega . yaha 2 mtlb second column hai .

awk -F':' '{print $1}' passwd = yeh ek aur type ka awk command hai .
 

sed 's/corona/covid/g' file.txt = yeh command file ke saare corona word ko covid se badalkar content show kar dega. but changes ko save nhi karega .

sed -i 's/corona/covid/g' file.txt = yeh command file ke saare corona word ko covid se badalkar content show kar dega. aur yeh command  changes ko save bhi karega .

uptime > /tmp/sysinfo.txt =  uptime ki value ko root directory ke andar tmp directory ke andar sysinfo.txt file mein daal dega .
aur agar yeh file nhi bani hogi to yeh file banakar dal dega. agar pehle iss file mein agar koi content hoga to vo delete ho jaayega.

uptime >> /tmp/sysinfo.txt = uptime ki value ko file ke andar append karega mtlb pehele jo content hai vo bhi rahega aur uptime ki value aur add ho jaayegi.

free -m = shows the information about memory utilzation . mem is for physical rem and swap is for virtual memory .

freee -m &>> /tmp/sysinfo.txt = yaha jaise command ka spell wrong hai fir bhi & lage hone ke karan se error terminal par show nhi hoga ,yeh error bhi sysinfo.txt mein   jaakar append ho jaayega.

echo "good morning" = yeh command se good morning type ho jaayega.

echo "good morning" > /tmp/sysinfo.txt = yeh command  good morning ko sysifo.txt file mein daal dega.

/dev/null = yeh usss file ka naam hai jisme ko bhi ccontent nhi hota hai aur naahi yah koi content store karta hai .

cat /dev/null > /tmp/sysinfo.txt = this command is used when iff we want to delete the whole  content from the  file.

find /etc -name host* = it is used to find the files with name in the directory. here name is host and the directory is /etc .

locate host = it is used to find the files with name in whole root directory(/) . and before running this command we have to run a command = updatedb . so that it    will not show the files that are deleted with that name . here name is host.


*****updatedb = yeh work nhi kar rha hai .

 
------------------------------------

piping commands :-

wc -l /etc/passwd = yeh command passwd file mein kitni line hai yeh batayega. used for counting the lines.

ls | wc -l = if you are in any directory like  etc and want to count the files in that directory then it will give the no. of files the directory have .

ls | grep host = all the files which starts with the name host then it will shows the names of that files .

--------------------------------------

user and groups:-

useradd ansible = this command is used to add new user.

groupadd devops = this command is used to add new group. 

usermod -aG devops jenkins  = this command is used to add a user in the group . here user named as jenkins is  adding in the group named as devops .

vim /etc/group = you can add the user with help of the vim editor also . by editing and adding the username in the user list of that groups and then save.

id ansible = this command is used to find the details of the user . here username is ansible .

passwd ansible = this command is used to set the password for a user. here user is ansible . but  as a root user you don't require any password. 

su - username = this is the  command for a root user to switch on any user.

last =shows the users who logged into your systems (whole login  history of users).

who = shows the user who is currently logged in.

****lsof -u username = LiSt Open Files' is used to find out which files are open by which process in present user .

userdel ansible  = this command is used to delete the user . here username is ansible. but by this command the home directory of that user will not delete.

userdel -r ansible = command to delete the user with home directory also. here username is ansible.

groupdel devops = this command is used to delete the groups .

-------------------------- file permissions 

***** niche 3 command samajh nhi aaya 

-rwx = read write execute for (root user)
r-x = read and execute for (root group)
r-x = read and execute for (others group)

ls -ld /opt/devopsdir = to find the permissions of particular directory.

chown  ansible:devops /opt/devopsdir = to change the ownership of a directory .

chown -R  ansible:devops /opt/devopsdir = same as upper command but differnce is that this command change ownership recursively it means it change the ownership of all   the subdirectories and file in the present directory also .

chmod o-x /opt/devopsdir = to change permission for other. here execute permission denied for others.

chmod o-r /opt/devopsdir = to change permission for other. here read permission denied for others.
 
chmod o-w /opt/devopsdir = to change permission for other. here write permission denied for others.

chmod g+w /opt/devopsdir = to add write permision for group.

permission are calculated by adding:

4(for read)
2(for write)
1(for execute)

chmod 640 myfile = read and write to user
                   only read for group
                   no permission for others

----------------------------------------
sudo :-

visudo = this command will open the sudoers file in the write mode .and iss command ko run karne ki permission bhi keval root user ko hi hai .

**sudoers file not have the write permission even for the root user also.

method1
** agar  apn koi user banate hai jaise ki ansible, usme yeh hota hai ki uss user mein sudo commmand chalane ki permission nahi hoti hai to iss ko solve karne ke liye    visudo ki help se sudoers file open karke vaha ansible ka naam add karna padega.  	

method2

[root@centos90 ~]# cd /etc/sudoers.d
[root@centos90 sudoers.d]# ls
vagrant
[root@centos90 sudoers.d]# cp vagrant devops
[root@centos90 sudoers.d]# ls
devops vagrant
[root@centos90 sudoers.d]# vim devops
[root@centos90 sudoers.d]# cat vagrant 
vagrant        ALL=(ALL)       NOPASSWD: ALL

[root@centos90 sudoers.d]# cat devops
%devops        ALL=(ALL)       NOPASSWD: ALL

now any user belong to group devops can rum the sudo commands.


------------------------------------------
 package management :- 

tree = this  command shows the directory in tree structure.

curl link = it is used to download the package . here link is the link of that package taken from browser which we want to download . yeh command root user mein chalate hai.

rpm -ivh packagename = this command is used to install the package . ivh meaning here is install and print human readable format .

httpd = it is a web server package .

yum automate the process of package installation and management .

yum manage all the work of curl and rpm itself. 

----------------------------------------
services:-


HTTPd is a software program, that usually runs in the background, as a process. It plays the role of server in a client-server model using HTTP and/or HTTPS network protocols. HTTPd waits for the incoming client requests and for each request it answers by replying with requested information.

systemctl status httpd

systemctl start httpd

systemctl enable httpd
 
systemctl is-active httpd

systemctl is-enabled httpd

--------------------------------------------

processes:-

top = show all the dynamic process based on the consumption of cpu and ram. it is similar to task manager in windows .

ps aux = show similar information as top command .

ps -ef = show the processes with parent process id .

ps -ef | grep httpd 

ps -ef | grep httpd | grep -v 'grep'  = yeh vo saare process ko unki parent process id ke ssath show karega jinme httpd word hoga aur grep word nhi hoga.

kill processno. = kill parent process along with child process. first kill child process then kill parent process.

kill -9 processno. = kill parent process only  not child process.

orphan process = yeh vo saaare process hai jinke parent process kill ho chuke hai . after deleting their parent process these process are adopted by the systemd process.

best way to clear the zombie process is to reboot the system.
----------------------------------------------------

archiving :-

tar = 

-----------------------------------------------------
ubuntu specifc commands :-


adduser devops = this command is used to add the user .

to open the sudoers file in vim editor 
1)  export EDITOR= vim
2)  visudo

wget link = command is used to download a package .

dpkg -i packagename = used to install the package.

dpkg -l = to list all the debian packages.

dpkg -r tree = command to remove the package . here package is tree.

cd /etc/apt/sources.list = this file  contains the repository information.

apt update 

apt search tree

httpd in centos7 as same as apache2 in ubuntu18

apt upgrade = command to upgrade all the packages .

apt remove apache2 = to  remove the packages . here package is apache2 . but it will not remove the data and configuration of the service.

apt install apache2 = installing package apache2 .

apt purge apache2 = it completely remove the package with data and configuration also. here package is apache2.

----------------------------------------------
problem:-

vagrant user visudo command kyu nhi chala paa rha hai .

 agr jenkins sudo -i chala paa raha hai to su - ansible command kyu nahi chala paa raha hai.

vagrant user mein jab user add karna hota hai to command ke aage sudo lagane par hi command chalta hai baaki kyu nahi chalta hai.

sudo aur yum kab aur kaha kha use hota  hai
.
systemctl reload httpd aur systemctl restart httpd kaam nahi kar rahe hai 
.
-----------------------ps -ef command kya karta hai. = yeh parent-child relation ki tarah se process ko show karta hai .

tar
zip

------------------------what to use for installing the package dpkg or apt commands . kisi package ka installer agar already download hai to dpkg use karenge . nahi toh apt commands use kar sakte hai agar package scratch se download and install karna hai toh .


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Bash scripting 

#!/bin/bash = this is the path of the interpretor 
#! =this is shebang character 
# = use to comment out a line .

chmod +x file.sh = to make the script executable.

script mein variable isliye declare jaata hai kyunki kuch cheez jo alag alag enviorment k hisab se change karni padti hai to unko script mein har jagah se replace na karna pade isliye keval variable mein change kardenge to vo har jagah change ho jaayegi.

echo $? = yeh command yeh pata lagane k liye chalaya jaata hai ki pichle wala command sahi se run hua ki nhi .
if it give value 0 then pichle wala command sahi se run hua hai . else if it give non-zero value then pichla command sahi se run nahi hua hai .  and this command can also be said as exit code .

\ = if we put the backward slash just before any special character then  special character will be a functionless special character.

agar kisi bhi variable ko permanent rakhna agar system restart ho to bhi naa jaaye to iske liye user ki home directory ke andar ek hidden file hoti hai  bashrc name se usme vo variable ko add karna padega.

uss file ko vim editor mein open karke below command add kar do.
export season ="Monsoon" 
here variable is season and its value is Monsoon here . so here it is permanent.

the upper command is for a particular user .like vagrant , root , etc .
but if you want to do it globally then we have to update this in vim /etc/profile . and preference is more for /etc/profile  as compared to bashrc file.

read -p password = this command is used to take the input .

read -sp password  = this command is used while you giving input you can't able to see what you are typing as like password.

if [$num -eq 1 ] 
then
     if value of num equal to 1.

elif [$num -gt 1 ] 
then
     if value of num greater than  1.

else
     if value of num less than 1.


agar if ko end karna ho toh fi likha jaata hai .

kabhi bhi apan koi process chalate hai toh uss process ki .pid file banti hai jaise ki httpd  process run kiya toh (httpd.pid) file banegi jab tak vo process run krega tab tak ke liye. 

you can check cat/var/run/httpd/httpd.pid . shayad yeh command process id dega.


crontab -e  = used for scheduling a  task or scheduling a command to run .
then after this a file will open in vim editor.

 MM HH DOM mm DOW command = here the command is that command which you want to run .

 * * * * * command = it command run in each minute .

 mm= minute
 hh = hour 
 DOM = date of month
 mm = month
 DOW= day of week 


 -------for loop syntax

 for var in java net python ruby php
 do 
   echo "looping"
   echo "value of variable is $var"
 done

 done is for end here .

--------while loop syntax

counter = 0

while [$counter -lt 5]
do
  echo "looping..."
  echo "value of counter is $counter"
  counter=$(($counter + 1))
done 

???????? what does ping command do?
Test your internet connection. Check if a remote machine is online. Analyze if there are network issues, such as dropped packages or high latency.

export EDITOR=vim (whenever by default vim is not opening).

public key is going to act as a lock .
private key is going to act as a key .


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
aws starts :-

ss -tunlp | grep 80 = we are finding port 80 from all the open tcp port.

for each instance there can be multiple network interfaces 

the public ip , security group ,etc all these things are created for network interfaces not for instances .

 ls ~/.aws/              

 ssh -i Downloads/web-dev-key.pem ubuntu@3.92.62.99

 54.83.64.177



---linux commands for partion format and mount:

fdisk -l = this command is going to list all the disk .

fdisk /dev/xvdf = to open the fdisk utility for  xvdf hardisk. ( mainly iske andar jaane ke baad apan partition banate hai disk mein )

mkfs = these command  shows the type of formatting we can do with our disk . for this command to be run we have to hit tab 2 times not hit enter after typing the comamnd .

mkfs.ext4 /dev/xvdf1 = to  format the xvdf1 partition  with ext4 format .

???????????? what is the meaning of mounting ? and mounting  karte samay file khali rehni chahiye kya .

here we  are taking the case of an toolplate website :-

cd /var/www/html
mkdir /tmp/img-bakups/
mv images/* /tmp/img-bakups/
ls images/   (iss samay images ke andar kuch bhi nhi rha hai kyunki sab img-bakups mein chala gaya hai .)

mount /dev/xvdf1 /var/www/html/images = this comamnd is for mounting but temporary . if you reeboot your system no mounting remains.

df -h = to checking the mounting .

for permanent mounting :-

vi /etc/fstab = we have to edit in this file some information as mentioned below:

/dev/xvdf1     /var/www/html/images     ext4 defaults  0 0 
0 and 0 is for dumping and file system check. 
?????what is the use of defaults here .
?????what is dumping and what is file system check .

mount -a = this command is used to mount all the files that you enter in fstab file .

mv  /tmp/img-bakups/* /var/www/html/images/

note(optional) :: agar yeh sab karne ke baad website k live server par images nahi dikh rahi hai toh iss path(vi /etc/selinux/config) mein jaakar 
SELINUX = disabled kardo. 

ssh -i wavecafe-prod-nvir.pem ubuntu@52.207.220.109
upaar wale command mein ubuntu ki jagah ec2-user use hoga when instance mein apan ne ubuntu linux ki jagah amazon-linux use kiya hai toh . 

????? security groups ke inbound rules abhi samajh nhi aaye .

agar launch template se koi instance naya banate hai toh vo saare instance separate users se nahi access kiye jaa sakte hai . vo ek hi end point se access kiye jaa sakte hai . aur vo endpoint hi request route karega alag alag instamce par . aur uss endpoint ko load balancer bolte hai . 

mount -fav = this command we have to run after mounting a file system using efs access points it means after editing in fstab file.


stress is a command which can stress your linux os on cpu and few other matrix .

???? what is the stress.

???? stress ke commmand samajh nhi aaya


 The CPU Utilization CloudWatch metric shows CPU usage per instance and not CPU usage per core.

we are going to host only static website on s3 bucket .

$$$$$$$$$$$$$$ github token =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

project:-

git:

git diff : file mein Changes bta dega . when file is not staged.

git checkout file name : changes ko hta dega file se . when file is not staged.

git diff --cached : file mein Changes bta dega . when file is staged.

git restore --staged  filename : koi change karne ke baad file agar staged hai to usko unstaged kardega. uske baad iss command (git checkout ) ka use karke change ko hata sakte hai.

git diff currentcommitid..lastcommitid = yeh command changes commit hone ke baad bhi kya changes tha vo btadega.

git revert Head = commit hone ke baad changes ko roll back karne ke liye .

git reset --hard commitid = iss commit id ke baad jitne bhi commit hue hai unki history delete kar dega yeh command . mtlb vo saare  commits history mein se hta dega . aur yeh commit id wale commit ke baad file jaise thi file ko vaise hi kar dega.

--------------------------------------

continous integration with jenkins 

/var/lib/jenkins = it is a home directory of jenkins .

ansible-galaxy init post-install =  command to init role directory structure . after this output on command line will be ( R

http://18.234.193.28:8080/

admin
suinakan@gmail.com
nopassword 
------------------------------
Ansible:--

ansible is configuration management tool also a powerful automation tool .

terraform has speciality in cloud automation.

inventory file in ansible stores the host information and group information and information about variables .

default inventory  in ansible is  sudo ls /etc/ansible/hosts.

configuration tools are idempotent in nature . jaise ki yeh command { ansible -i inventory -m yum -a "name=httpd state=present" web01 --become } agar jaise yeh command ek baar chalane ke baad vapas chalaya toh aisa nhi hai ki yeh vapas yum install httpd karega . kyunki web01 pehle se hi same state mein hai.

ansible-playbook -i inventory web_db.yaml --syntax-check = yeh command playbook ka syntax check karne k liye kaam aata hai. 

ansible -i inventory -m copy -a "src=index.html dest=/var/www/html/index.html" web01 --become = copying index.html from control machine to target machine . 

ansible-doc -l = command to get the list of all modules .

ansible-doc modulename = command to get the details about module.

ansible-playbook -i inventory web_db.yaml -C = yeh command playbook run karne k liye nahi hai. kyunki yaha last C bhi lga hua hai iska mtlb yeh hai ki yeh command ko dry run karke output btayega but yeh actually run nhi hua hai. aur yeh output close to original output hoga naa ki original output hoga .

/etc/ansible/ansible.cfg = default configuration file :- shayad also called as a global configuration file.

system warnings = these warnings based on the configuration setting of ansible itself.

deprecation warnings = these warnings is for if you are using module , doing settings or writing playbook of older versions or using module which are depricated that means it is removed in further ansible upgrades so ansible will start giving deprecation warnings . 

ansible-playbook db.yaml -vv = two level of verbosity.
ansible-playbook db.yaml -vvv = three  level of verbosity.
ansible-playbook db.yaml -vvvv = four level of verbosity.

to print a variable or a mesage debug module is used.

ansible-playbook  -e USRNM=value1 -e COMM=value2 vars_precedence.yaml = command for passing variables through command line.

banner file is at  /etc/motd location . 

handlers file ke last mein lagte hai aur last mein hi execute hote hain.

ansible-galaxy init post-install =  command to init roles in role directory  . after this output on command line will be ( Role post-install was created successfully.).

ansible galaxy = it is a name of website which have predefined roles.
--------------------------------
*******what is the difference between network and network interfaces
*******what is the difference between mac address and ip address.

----------------------------------------------------
docker starts here --->>>>

docker run image-name = it means creating a container for me from this image named as image-name.

docker-hub is the place where all the images are hosted .

docker ps = if you want to see running container 

docker ps -a = if you want to see a dead container . 

Image become containers when they run on docker engine . docker image is stopped container which is archived .

docker hub is the registry for docker image . 

docker pull nginx = this will pull the image from docker hub by default . 

docker run --name what -p 7090:80 -d nginx =  here image is nginx and what is the container name and -d is used for to run the container in the background not in foreground and d also shows detached mode  and 7090 is the host port and 80 is the port on which the service runs .

docker start container name/id = this will start the stopped container .

docker stop container name/id = this will stop the started container .

container directory path = cd /var/lib/docker/containers/ . we can go into this directory with sudo user only.

du -sh directory name  = check the size of the directory.

container is just a process running from directory and all the data comes from the image.

docker exec containername commandname = this is used to execute a command named as commandname  in the container named as containername.

docker exec -it containername /bin/bash = by this command you can attach to a container which is a process. ( apni language mein container ke andar kaam karne k liye  container ka ek terminal khul jaayega .)

docker  rmi nginx:mainline-perl = it is used to remove the image . here removing image of nginx whose tagname is mainline-perl.

docker rm containername/id : used to remove the container .

if we have to remove the image , first we have to stop the container of that image then we have to remove the container than we can remove the image .

docker run -it ubuntu /bin/bash = running a container interactive way . this time only the container will in the list pf running container after killing the process of /bin/bash  then container will go in the list of dead containers.

docker inspect imagename = detailed information about image . this shows the meta data of image in json format. in this there are two things cmd and entrypoint . when we execute docker run then first the script in entrypoint will get execute then the commands in cmd . and the output of these execution will shown when we execute docker logs .

docker run  -d -P nginx = here -P is for port mapping  means that it will automatically select host port and container port both . no need to mention both. here container is running in background.

docker logs containername = it will show the output of the command that are executed in container.

docker run -P nginx = container will run in foreground . it will take the shell of our os. we have to ctrl+c to take the shell again. after this container will also get dead.

-e something = something = this means we are passing some values while running a contianer. -e also used to export the values .

bind mount is usually used to inject the data from host machine to the container.

docker volume = command for volume.     

docker volumes are stored in the path that is = /var/lib/docker/volumes/volumename.

docker inspect command can also be run for container.
  
-----------------------------------
archiving a file: (basic linux archiving)
  mkdir images 
  cdimages
  cd images
  ls
  mkdir nano
  wget https://www.tooplate.com/zip-templates/2122_nano_folio.zip
  ls
  sudo apt install unzip -y 
  unzip  2122_nano_folio.zip 
  ls
  cd 2122_nano_folio/
  ls
  tar czvf nano.tar.gz *
  ls
  mv nano.tar.gz ../
  ls
  cd ..
  ls
  rm -rf 2122_nano_folio 2122_nano_folio.zip
  ls
  mv nano.tar.gz nano/
  cd nano/
  ls
-------------------------------------
differnt cases in docker file considering cmd and entrypoint :-

case1 : cmd["echo" , "Hello"] = if we make the images from this docker file run the container on this image then hello will print. 

case2: entrypoint = ["echo"] =  if we make the images from this docker file run the container on this image then nothing will print. if we pass any arguement at run time then that arguement will print.

case3 : entrypoint = ["echo"] cmd["Hello"] = if we make the images from this docker file run the container on this image then the default arguement hello will print. if we pass any arguement at run time then that arguement will print which replaces default arguement.

--------------------------------------

Jenkins starts here :-

docker exec -ti jenkins bash = command for entry in container .

./scriptname.sh = to run the script

docker cp script.sh jenkins:/tmp/script.sh = copying file script.sh from host machine to container named as jenkins at path /tmp/script.shayad

ctrl r for searching the command  jo ki pehle execute kiye hue hai. aur kuch type karo jaise ki agar upar wala hi command search karna hai toh cp type kar do .

ssh-keygen -f remote-key = creating a ssh key in centos

----------------------------------------------

kubernetes: ( kubectl cheat sheet mein easy rahega command dekhne ke liye.)

kubernetes is most popular container orchestrtion tool.

kubectl get nodes = to get a list of nodes 

kubectl describe node  (nodename) =  to get a whole information about node .

kubectl get node i-04e188bfe63503230  -o yaml = to get a whole information about node but in yaml format .

kubectl get pod = to get list of pods

kubectl get pod -o wide = to get list of pods with little bit more information.

kubectl get pod (podname) -o yaml = same command as a node for pod.

ImagePullBackOff = jab image ka naam wrong de diya jaaye toh yeh error show karega ya fir agr image private repository mein hai aur apan ne credential nhi diya hoga tab bhi yeh error aayega.

kubectl logs (podname) = this command will give the logs of pod whose name is given. also gives the ouput of the container running in pod .

kubectl run (podname) --image=(imagename) = to run the pod with given podname with given imagename.

# service in kubernetes is same as loadbalancer in ec2 . it works as a static endpoint like all pods are mortal or disposable so when they change their ip will also get change that's why we need service.

cluster ip is for internal communication of pod whereas node port which is same as port mapping in docker used for connecting the pod to the outside world(not for production use cases) where as loadbalancer is for expose to  outside network but for production purposes.

shayad node port ko host port bhi bolte hai.

kubectl create -f file.yaml = kisi bhi file.yaml jaisi script ko apply karne mein kaam aata hai.

kubectl get rs = to get list of replica set.

kubectl delete pod (podname)  =  used to delete a pod.

kubectl scale --replicas=1 rs/(replicasetname) =  used to update no. of replicas . here we are updating to 1. 

kubectl edit rs (replicasetname) = is command apply karne ke badd ek file open hogi to usme no. of replica set update kar sakte hain. 

kubectl get deployment = to get the list of deployment.

 kubectl rollout undo deployment/nginx-deployment = kisi bhi deployment ko update karne ke baad vapas ussi version mein change kar dena.

 kubectl rollout history deployment/nginx-deployment = to get the history of deployment .

echo -n "secretpass" | base64 = kisi bhi word ko encode karne k liye . jaise yaha word hai secretpass liya hai.

echo 'adshsjddav2332jad' | base64  --decode = kisi bhi word ko decode karne k liye.

kubectl exec --stdin --tty (podname) -- /bin/bash = kisi bhi pod ke andar jaane k liye.




-------------------------------------------------

terraform:

terraform helps in infrastructure as a code . it automates  infrastructure through code.



---------------------------------------------------

python:

rule for passing arguemments to a function:

func(params , args , default parameter , kwargs)

when we  define functions like func( name,age,  args,  i=2 ,   kwargs)

when we call functions like func('anish','twenty',   1,2,3,4,5,  num1=2,num2=1)  (default ko to call ke samay likhne ki jarrorat nhi hai)

all genertors are iterables but not all iterables are generators. like list is a iterable not generator.

doubt:

class Bigobject:
  pass

class BigSubject:
  pass

class Big_write:
  pass

class Big_Write:
  pass

class bigobject:
  pass


obj1 = Bigobject()
obj2 = BigSubject()
obj3 = Big_write()
obj4 = Big_Write()
obj5 = bigobject()


print(type(obj1))
print(type(obj2))
print(type(obj3))
print(type(obj4))
print(type(obj5))


kops validate cluster --state=s3://vprofile-kops-anish 



from functools import reduce 
mylist= [1,2,3] 
print(list(map(lambda item: item*2,mylist)))
print(list(filter(lambda item: item%2,mylist)))
print(reduce(lambda acc , item: item+acc,mylist))
print(mylist)


def hello():
  print("hii")

# case1
# great= hello()  # yaha yeh hii return nhi kar rha hai
# print(great)  #yha none return hua

# case2
great=hello
great() # yha none return nhi hua 
print(great) #yha  location print ho rahi hai




def hello(func):
  func()

def greet():
  print("still here")

a=hello(greet)
print(a)   # yeh none return kar ha hai 
# a #yeh kaam kyu nhi kar rha hai 
# a()  #yeh kaam kyu nhi kar rha hai and not callable bta rha h
print("))))))))")

hello(greet)  # yeh none return nahi  kar ha hai 




def hello():
  print('helllloooo')

def my_decorator(func):
  def wrap_func():
    func()

  return wrap_func  # yeh line ka matlab





def my_decorator(func):
  def wrap_func():
    print("########")
    func()
    print("########")

  return wrap_func 

def hello():
  print("heelllooo")

hello2 = my_decorator(hello)()
print(hello2)  # it is returning none

hello3 = my_decorator(hello)
hello3()     # it is not returning none 




def genfunc(num):
   for i in range(num):
    yield i


for item in genfunc(1000): #jaise hi function again call hoga to loop to vapas shuruaat se chalu hogi.
  print(item)


  
class MyGen():
  current = 0
  def __init__(self , first , last):
    self.first = first 
    self.last = last

  def __iter__(self):
    return self

  def __next__(self):
    if MyGen.current < self.last:
      num = MyGen.current
      MyGen.current +=1
      return num
    raise StopIteration


gen = MyGen(0,100)
for i in gen:
  print(i)


  
